#BlueJ class context
comment0.target=Button
comment0.text=\r\n\ Class\ representing\ buttons\r\n\ \r\n\ @author\ Austin\r\n\ @version\ 0\r\n
comment1.params=x\ y\ width\ height\ colour
comment1.target=Button(int,\ int,\ int,\ int,\ greenfoot.Color)
comment1.text=\r\n\ Constructor\ for\ a\ button\r\n\ \r\n\ @param\ x\ \ \ \ \ \ \ \ \ Top\ left\ coordinate\ x\r\n\ @param\ y\ \ \ \ \ \ \ \ \ Top\ left\ coordinate\ y\r\n\ @param\ width\ \ \ \ \ Width\ of\ button\r\n\ @param\ height\ \ \ \ Height\ of\ button\r\n\ @param\ colour\ \ \ \ Background\ colour\ of\ button\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Listen\ for\ a\ mouse\ hover\r\n
comment3.params=
comment3.target=void\ createImage()
comment3.text=\r\n\ Draws\ the\ button\ to\ the\ creen\r\n
comment4.params=colour
comment4.target=void\ setColour(greenfoot.Color)
comment4.text=\r\n\ Set\ the\ colour\ of\ the\ button\r\n\ \r\n\ @param\ colour\ \ \ \ The\ colour\ to\ set\ the\ button\ to\r\n
comment5.params=colour
comment5.target=void\ setHoverColour(greenfoot.Color)
comment5.text=\r\n\ Set\ the\ colour\ of\ the\ button\ when\ hovered\ over\r\n\ \r\n\ @param\ colour\ \ \ \ The\ colour\ the\ button\ should\ be\ when\ hovered\ over\r\n
comment6.params=radius
comment6.target=void\ setBorderRadius(int)
comment6.text=\r\n\ Set\ the\ border\ radius\ of\ the\ button\r\n\ \r\n\ @param\ radius\ \ \ \ The\ border\ radius\ of\ the\ rounded\ corners\r\n
comment7.params=
comment7.target=boolean\ mouseDown()
comment7.text=\r\n\ Check\ if\ the\ button\ has\ been\ clicked\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ Whether\ the\ button\ has\ been\ clicked\ and\ is\ enabled\r\n
comment8.params=
comment8.target=boolean\ mouseUp()
comment8.text=\r\n\ Check\ if\ the\ button\ has\ been\ released\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ Whether\ the\ button\ has\ been\ released\ and\ is\ enabled\r\n
numComments=9
